{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,S,oDASA,MAAMC,EAAeC,SAASC,cAAc,gBACtCC,EAAkBF,SAASC,cAAc,YAEzCE,EAAY,IAAI,EAAAC,EAAAC,SAAY,CAAEC,SAAU,cAAeC,QAAQ,IAC/DC,EAAgB,IAAI,EAAAC,EAAAJ,SAE1BN,EAAaW,iBAAiB,UAE9BC,eAAwBC,GACpBA,EAAEC,iBAkHFX,EAAgBY,UAAY,GA/G5B,MAAMC,EAAYf,SAASC,cAAc,YAKzC,GAJAe,EAASC,UAAUF,GAEnBP,EAAcU,KAAON,EAAEO,cAAcC,SAASC,YAAYC,MAAMC,OAoFpE,SAA4BF,GACxB,GAAoB,KAAhBA,EAGA,OAFAG,EAAA3B,GAAS4B,OAAOC,QAAQ,kCAEjB,C,CAtFPC,CAAmBnB,EAAcU,MACjC,OAGJV,EAAcoB,YACdpB,EAAcqB,qBACd1B,EAAU2B,WAEV,IACI,MAAMC,KAAEA,EAAIC,UAAEA,SAAoBxB,EAAcyB,gBAE/C,GA+ET,SAA4BC,GACxB,GAAe,IAAXA,EAIA,OAHA/B,EAAUgC,SACVX,EAAA3B,GAAS4B,OAAOW,QAAQ,6EAEjB,C,CApFFC,CAAmBN,EAAKG,QACzB,QA8CZ,SAAmCF,GAC/BR,EAAA3B,GAAS4B,OAAOa,QAAQ,oBAAoBN,Y,CA5CxCO,CAA0BP,GAC1BQ,EAAsBT,GACtB5B,EAAUgC,SACVnB,EAASyB,QAAQ1B,E,CAGnB,MAAO2B,GACLC,EAAYD,E,KAMpB,MAsBM1B,EAAW,IAAI4B,sBAtBCjC,MAAMkC,IACxBA,EAAQC,SAAQnC,MAAMoC,IAClB,IACI,GAAIvC,EAAcwB,WAAaxB,EAAcwC,cAE7C,YAsBRxB,EAAA3B,GAAS4B,OAAOwB,KAAK,8DAnBb,GAAIF,EAAMG,gBACH1C,EAAcwB,UAAYxB,EAAc2C,cACjB,KAAvB3C,EAAcU,KAAa,CAClC,MAAMa,KAAEA,SAAevB,EAAcyB,gBACrCO,EAAsBT,GAiClC,SAAsBqB,GAClB,MAAQC,OAAQC,GAAetD,SAASC,cAAc,IAAImD,KAAaG,kBAAkBC,wBAEzFC,OAAOC,SAAS,CACZC,IAAkB,EAAbL,EACLM,SAAU,U,CArCNC,E,EAEF,MAAOnB,GACLC,EAAYD,E,IAGlB,GAGmD,CACrDoB,WAAY,UAWhB,SAAStB,EAAsBT,GAC3B,MAAMgC,EAAiBhC,EAClBiC,IAAIC,EAAA5D,SACJ6D,KAAK,IAEVhE,EAAgBiE,mBAAmB,YAAaJ,GAElC,IAAIvC,EAAA4C,GAAJ,CAAmB,cACzBC,S,CA6BZ,SAAS1B,EAAYD,GACjBlB,EAAA3B,GAAS4B,OAAOwB,KAAK,+BACrB9C,EAAUgC,SACVmC,QAAQC,IAAI7B,E","sources":["src/js/gallery3.js"],"sourcesContent":["import Notiflix from 'notiflix';\nimport SimpleLightbox from \"simplelightbox\";\nimport \"simplelightbox/dist/simple-lightbox.min.css\";\nimport '../css/common.css';\nimport galleryCardAdditionalTpl from './templates/gallery-additional';\n//import throttle from 'lodash.throttle';\nimport SearchService from './searchService';\nimport LoadMoreBtn from './load-more-btn';\n\nconst searchFormEl = document.querySelector('#search-form');\nconst cardContainerEl = document.querySelector('.gallery');\n\nconst submitBtn = new LoadMoreBtn({ selector: '.submit-btn', hidden: false })\nconst searchService = new SearchService();\n\nsearchFormEl.addEventListener('submit', onSearch);\n\nasync function onSearch(e) {\n    e.preventDefault();\n    clearCardcontainer();\n\n    const lastPhoto = document.querySelector('.endPage');\n    observer.unobserve(lastPhoto);\n\n    searchService.word = e.currentTarget.elements.searchQuery.value.trim();\n    \n    if (isSearchQueryAmpty(searchService.word)) {\n        return;\n    }; \n\n    searchService.resetPage();\n    searchService.resetViewedPhotoes();\n    submitBtn.disabled();\n\n    try {\n        const { hits, totalHits } = await searchService.fetchArticles();\n\n         if (isArrayOfDataAmpty(hits.length)) {\n            return;\n        }\n\n        totalFoundPicturesMessage(totalHits);\n        appendPhotoCardMarkup(hits);\n        submitBtn.enable();\n        observer.observe(lastPhoto);\n       // return;\n\n    } catch (error) {\n        onSomeError(error);\n    };\n}\n\n\n\nconst onloadPhotoes = async entries => {\n    entries.forEach(async entry => {\n        try {\n            if (searchService.totalHits <= searchService.viewedPhotoes) {\n            endOfResultsMessage();\n            return;\n        }\n\n            if (entry.isIntersecting\n                && searchService.totalHits > searchService.viewedPhotoe\n                && searchService.word !== '') {\n            const { hits } = await searchService.fetchArticles();\n            appendPhotoCardMarkup(hits);\n            smoothScroll();\n        }\n        } catch (error) {\n            onSomeError(error);\n        }\n        \n    });\n};\n\nconst observer = new IntersectionObserver(onloadPhotoes, {\n    rootMargin: '200px',\n});\n\nfunction endOfResultsMessage() {\n    Notiflix.Notify.info(\"We're sorry, but you've reached the end of search results.\");\n}\n\nfunction totalFoundPicturesMessage(totalHits) {\n    Notiflix.Notify.success(`Hooray! We found ${totalHits} images.`);\n}\n\nfunction appendPhotoCardMarkup(hits) {\n    const makePhotoCards = hits\n        .map(galleryCardAdditionalTpl)\n        .join('');\n    \n    cardContainerEl.insertAdjacentHTML('beforeend', makePhotoCards);\n\n    let gallery = new SimpleLightbox('.gallery a');\n    gallery.refresh();\n}\n\nfunction smoothScroll(className) {\n    const { height: cardHeight } = document.querySelector(`.${className}`).firstElementChild.getBoundingClientRect();\n\n    window.scrollBy({\n        top: cardHeight * 2,\n        behavior: \"smooth\",\n    });\n}\n\nfunction isSearchQueryAmpty(searchQuery) {\n    if (searchQuery === '') {\n        Notiflix.Notify.warning(\"Please, enter a search query!\");\n\n        return true;\n    };\n}\n\nfunction isArrayOfDataAmpty(length) {\n    if (length === 0) {\n        submitBtn.enable();\n        Notiflix.Notify.failure(\"Sorry, there are no images matching your search query. Please try again.\");\n        \n        return true;\n    };\n}\n\nfunction onSomeError(error) {\n    Notiflix.Notify.info(\"We're sorry, try ones more.\");\n    submitBtn.enable();\n    console.log(error);\n}\n\nfunction clearCardcontainer() {\n    cardContainerEl.innerHTML = '';\n}\n\n\n\n"],"names":["$7Y9D8","parcelRequire","$be859a28b3138557$var$searchFormEl","document","querySelector","$be859a28b3138557$var$cardContainerEl","$be859a28b3138557$var$submitBtn","$2cvPU","default","selector","hidden","$be859a28b3138557$var$searchService","$aYq7L","addEventListener","async","e","preventDefault","innerHTML","lastPhoto","$be859a28b3138557$var$observer","unobserve","word","currentTarget","elements","searchQuery","value","trim","$parcel$interopDefault","Notify","warning","$be859a28b3138557$var$isSearchQueryAmpty","resetPage","resetViewedPhotoes","disabled","hits","totalHits","fetchArticles","length","enable","failure","$be859a28b3138557$var$isArrayOfDataAmpty","success","$be859a28b3138557$var$totalFoundPicturesMessage","$be859a28b3138557$var$appendPhotoCardMarkup","observe","error","$be859a28b3138557$var$onSomeError","IntersectionObserver","entries","forEach","entry","viewedPhotoes","info","isIntersecting","viewedPhotoe","className","height","cardHeight","firstElementChild","getBoundingClientRect","window","scrollBy","top","behavior","$be859a28b3138557$var$smoothScroll","rootMargin","makePhotoCards","map","$hDK3b","join","insertAdjacentHTML","$fZKcF","refresh","console","log"],"version":3,"file":"gallery3.bb69d843.js.map"}