{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,S,8EASMC,EAAeC,SAASC,cAAc,gBACtCC,EAAkBF,SAASC,cAAc,YAEzCE,EAAY,IAAI,EAAAC,EAAAC,SAAY,CAAEC,SAAU,cAAeC,QAAQ,IAC/DC,EAAgB,IAAI,EAAAC,EAAAJ,S,SAIXK,I,OAAAA,EAAfC,EAAAd,EAAA,CAAAc,EAAAC,GAAAC,MAAA,SAAAC,EAAwBC,G,IAIdC,EAc0BC,EAApBC,EAAMC,E,qEAjBlBJ,EAAEK,iBACFC,IAEML,EAAYhB,SAASC,cAAc,YACzCqB,EAASC,UAAUP,GAEnBR,EAAcgB,KAAOT,EAAEU,cAAcC,SAASC,YAAYC,MAAMC,QAE5DC,EAAmBtB,EAAcgB,MAAK,C,uDAI1ChB,EAAcuB,YACdvB,EAAcwB,qBACd7B,EAAU8B,W,oBAG4BzB,EAAc0B,gB,WAApBjB,EAAmCkB,EAAAC,KAAvDlB,EAAoBD,EAApBC,KAAMC,EAAcF,EAAdE,WAETkB,EAAmBnB,EAAKoB,QAAO,C,kDAIpCC,EAA0BpB,GAC1BqB,EAAsBtB,GACtBf,EAAUsC,SACVnB,EAASoB,QAAQ1B,G,mDAIjB2B,EAAWR,EAAAS,I,4DA/BIC,MAAAC,KAAAC,U,CAFvBhD,EAAaiD,iBAAiB,U,SAENjC,G,OAATL,EAAQmC,MAAAC,KAAAC,U,IAqCvB,I,EAAME,G,EAAgBtC,EAAAd,EAAA,CAAAc,EAAAC,GAAAC,MAAA,SAAAqC,EAAMC,G,kEACxBA,EAAQC,QAAO,W,MAACzC,EAAAd,EAAA,CAAAc,EAAAC,GAAAC,MAAA,SAAAC,EAAMuC,G,gFAEV7C,EAAcW,WAAaX,EAAc8C,eAAa,C,sBAwBlE3C,EAAA4C,GAASC,OAAOC,KAAK,8D,+BAnBTJ,EAAMK,gBACHlD,EAAcW,UAAYX,EAAcmD,cACjB,KAAvBnD,EAAcgB,MAAW,C,gCACThB,EAAc0B,gB,OACrCM,EADYL,EAAAC,KAAJlB,MAkCE0C,OAhCVC,EAiCuB5C,SAAvB6C,SAAuB7C,EAAAjB,SAASC,cAAc,IAAc8D,OAAVH,IAAaI,kBAAkBC,wBAAjFH,EAAuB7C,EAAvBiD,OAERC,OAAOC,SAAS,CACZC,IAAkB,EAAbP,EACLQ,SAAU,W,0DAlCN3B,EAAWR,EAAAS,I,kCA6BvB,IAAsBgB,EACa3C,EAAvB6C,C,wCA7CcT,G,gCAAP,I,oDADSF,G,iCAsBtB7B,EAAW,IAAIiD,qBAAqBtB,EAAe,CACrDuB,WAAY,UAOhB,SAASjC,EAA0BpB,GAC/BR,EAAA4C,GAASC,OAAOiB,QAAQ,oBAA8BV,OAAV5C,EAAU,Y,CAG1D,SAASqB,EAAsBtB,GAC3B,IAAMwD,EAAiBxD,EAClByD,IAAIC,EAAAvE,SACJwE,KAAK,IAEV3E,EAAgB4E,mBAAmB,YAAaJ,GAElC,IAAI/D,EAAAoE,GAAJ,CAAmB,cACzBC,S,CAYZ,SAASlD,EAAmBH,GACxB,GAAoB,KAAhBA,EAGA,OAFAhB,EAAA4C,GAASC,OAAOyB,QAAQ,kCAEjB,C,CAIf,SAAS5C,EAAmBC,GACxB,GAAe,IAAXA,EAIA,OAHAnC,EAAUsC,SACV9B,EAAA4C,GAASC,OAAO0B,QAAQ,6EAEjB,C,CAIf,SAASvC,EAAYwC,GACjBxE,EAAA4C,GAASC,OAAOC,KAAK,+BACrBtD,EAAUsC,SACV2C,QAAQC,IAAIF,E,CAGhB,SAAS9D,IACLnB,EAAgBoF,UAAY,E","sources":["src/js/gallery3.js"],"sourcesContent":["import Notiflix from 'notiflix';\nimport SimpleLightbox from \"simplelightbox\";\nimport \"simplelightbox/dist/simple-lightbox.min.css\";\nimport '../css/common.css';\nimport galleryCardAdditionalTpl from './templates/gallery-additional';\n//import throttle from 'lodash.throttle';\nimport SearchService from './searchService';\nimport LoadMoreBtn from './load-more-btn';\n\nconst searchFormEl = document.querySelector('#search-form');\nconst cardContainerEl = document.querySelector('.gallery');\n\nconst submitBtn = new LoadMoreBtn({ selector: '.submit-btn', hidden: false })\nconst searchService = new SearchService();\n\nsearchFormEl.addEventListener('submit', onSearch);\n\nasync function onSearch(e) {\n    e.preventDefault();\n    clearCardcontainer();\n\n    const lastPhoto = document.querySelector('.endPage');\n    observer.unobserve(lastPhoto);\n\n    searchService.word = e.currentTarget.elements.searchQuery.value.trim();\n    \n    if (isSearchQueryAmpty(searchService.word)) {\n        return;\n    }; \n\n    searchService.resetPage();\n    searchService.resetViewedPhotoes();\n    submitBtn.disabled();\n\n    try {\n        const { hits, totalHits } = await searchService.fetchArticles();\n\n         if (isArrayOfDataAmpty(hits.length)) {\n            return;\n        }\n\n        totalFoundPicturesMessage(totalHits);\n        appendPhotoCardMarkup(hits);\n        submitBtn.enable();\n        observer.observe(lastPhoto);\n       // return;\n\n    } catch (error) {\n        onSomeError(error);\n    };\n}\n\n\n\nconst onloadPhotoes = async entries => {\n    entries.forEach(async entry => {\n        try {\n            if (searchService.totalHits <= searchService.viewedPhotoes) {\n            endOfResultsMessage();\n            return;\n        }\n\n            if (entry.isIntersecting\n                && searchService.totalHits > searchService.viewedPhotoe\n                && searchService.word !== '') {\n            const { hits } = await searchService.fetchArticles();\n            appendPhotoCardMarkup(hits);\n            smoothScroll();\n        }\n        } catch (error) {\n            onSomeError(error);\n        }\n        \n    });\n};\n\nconst observer = new IntersectionObserver(onloadPhotoes, {\n    rootMargin: '200px',\n});\n\nfunction endOfResultsMessage() {\n    Notiflix.Notify.info(\"We're sorry, but you've reached the end of search results.\");\n}\n\nfunction totalFoundPicturesMessage(totalHits) {\n    Notiflix.Notify.success(`Hooray! We found ${totalHits} images.`);\n}\n\nfunction appendPhotoCardMarkup(hits) {\n    const makePhotoCards = hits\n        .map(galleryCardAdditionalTpl)\n        .join('');\n    \n    cardContainerEl.insertAdjacentHTML('beforeend', makePhotoCards);\n\n    let gallery = new SimpleLightbox('.gallery a');\n    gallery.refresh();\n}\n\nfunction smoothScroll(className) {\n    const { height: cardHeight } = document.querySelector(`.${className}`).firstElementChild.getBoundingClientRect();\n\n    window.scrollBy({\n        top: cardHeight * 2,\n        behavior: \"smooth\",\n    });\n}\n\nfunction isSearchQueryAmpty(searchQuery) {\n    if (searchQuery === '') {\n        Notiflix.Notify.warning(\"Please, enter a search query!\");\n\n        return true;\n    };\n}\n\nfunction isArrayOfDataAmpty(length) {\n    if (length === 0) {\n        submitBtn.enable();\n        Notiflix.Notify.failure(\"Sorry, there are no images matching your search query. Please try again.\");\n        \n        return true;\n    };\n}\n\nfunction onSomeError(error) {\n    Notiflix.Notify.info(\"We're sorry, try ones more.\");\n    submitBtn.enable();\n    console.log(error);\n}\n\nfunction clearCardcontainer() {\n    cardContainerEl.innerHTML = '';\n}\n\n\n\n"],"names":["$bpxeT","parcelRequire","$2c81a8fded229245$var$searchFormEl","document","querySelector","$2c81a8fded229245$var$cardContainerEl","$2c81a8fded229245$var$submitBtn","$gGuPt","default","selector","hidden","$2c81a8fded229245$var$searchService","$h3pWP","$2c81a8fded229245$var$_onSearch","$parcel$interopDefault","$2TvXO","mark","_callee","e","lastPhoto","ref","hits","totalHits","preventDefault","$2c81a8fded229245$var$clearCardcontainer","$2c81a8fded229245$var$observer","unobserve","word","currentTarget","elements","searchQuery","value","trim","$2c81a8fded229245$var$isSearchQueryAmpty","resetPage","resetViewedPhotoes","disabled","fetchArticles","_ctx","sent","$2c81a8fded229245$var$isArrayOfDataAmpty","length","$2c81a8fded229245$var$totalFoundPicturesMessage","$2c81a8fded229245$var$appendPhotoCardMarkup","enable","observe","$2c81a8fded229245$var$onSomeError","t0","apply","this","arguments","addEventListener","$2c81a8fded229245$var$onloadPhotoes","_callee1","entries","forEach","entry","viewedPhotoes","$6JpON","Notify","info","isIntersecting","viewedPhotoe","className","$2c81a8fded229245$var$smoothScroll","cardHeight","concat","firstElementChild","getBoundingClientRect","height","window","scrollBy","top","behavior","IntersectionObserver","rootMargin","success","makePhotoCards","map","$ag7wj","join","insertAdjacentHTML","$5IjG7","refresh","warning","failure","error","console","log","innerHTML"],"version":3,"file":"gallery3.cf39cc25.js.map"}